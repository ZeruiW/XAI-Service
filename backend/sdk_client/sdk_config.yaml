services:
  db:
    - url: "http://db_service_url/azure_blob"
      info:
        exp_name: "db"

  model:
    - url: "http://model_service_url/resnet50"
      info:
        exp_name: "resnet50"
    - url: "http://model_service_url/azurecog"
      info:
        exp_name: "azurecog"

  xai:
    - url: "http://xai_service_url/xai/pt_cam"
      info:
        exp_name: "grad-cam"
    - url: "http://xai_service_url/xai/pt_cam/layercam"
      info:
        exp_name: "layer-cam"
    - url: "http://xai_service_url/xai/pt_cam/eigencam"
      info:
        exp_name: "eigen-cam"

  evaluation:
    - url: "http://evaluation_service_url/evaluation"
      info:
        exp_name: "eval"

# Call the function sdk.get_registered_services() to get the ID info of all the services to create XAI and Evaluation Task Sheets
xai_task_sheets:
  - task_type: "xai1"
    db_service_executor_id: "Registered_DB_Service_ID"
    model_service_executor_id: "Registered_Model_Service_ID"
    xai_service_executor_id: "Registered_XAI_Service_ID"
    evaluation_service_executor_id: "Registered_Evaluation_Service_ID"
    task_parameters:
      method_name: "xai_method_name"                   # Example values: grad-cam, layercam, eigencam
      data_set_name: "data_set_name"                   # Example value: imagenet1000
      data_set_group_name: data_set_group_name         # Example value: g0
      model_name: "model_name"                         # Example values: resnet50, azurecog
      executor_config:
        use_pytorch_multiprocess: true
    task_sheet_name: "provide_xai_task_sheet_name"
  - task_type: "xai2"
    db_service_executor_id: "Registered_DB_Service_ID"
    model_service_executor_id: "Registered_Model_Service_ID"
    xai_service_executor_id: "Registered_XAI_Service_ID"
    evaluation_service_executor_id: "Registered_Evaluation_Service_ID"
    task_parameters:
      method_name: "xai_method_name"                   # Example values: grad-cam, layercam, eigencam
      data_set_name: "data_set_name"                   # Example value: imagenet1000
      data_set_group_name: data_set_group_name         # Example value: g0
      model_name: "model_name"                         # Example values: resnet50, azurecog
      executor_config:
        use_pytorch_multiprocess: true
    task_sheet_name: "provide_xai_task_sheet_name"

evaluation_task_sheets:
  - task_type: "evaluation1"
    db_service_executor_id: "Registered_DB_Service_ID"
    model_service_executor_id: "Registered_Model_Service_ID" 
    xai_service_executor_id: "Registered_XAI_Service_ID"
    evaluation_service_executor_id: "Registered_Evaluation_Service_ID"   
    task_parameters:
      explanation_task_ticket: "Dynamically_fetched_Ticket_ID"
    task_sheet_name: "provide_evalautaion_task_sheet_name"
  - task_type: "evaluation2"
    db_service_executor_id: "Registered_DB_Service_ID"
    model_service_executor_id: "Registered_Model_Service_ID" 
    xai_service_executor_id: "Registered_XAI_Service_ID"
    evaluation_service_executor_id: "Registered_Evaluation_Service_ID"   
    task_parameters:
      explanation_task_ticket: "Dynamically_fetched_Ticket_ID"
    task_sheet_name: "provide_evalautaion_task_sheet_name"

pipelines:
  - name: "pipeline1"
    xai_task_sheet_id: "xai_task_sheet_id"
    evaluation_task_sheet_id: "evaluation_task_sheet_id"
  - name: "pipeline2"
    xai_task_sheet_id: "xai_task_sheet_id"
    evaluation_task_sheet_id: "evaluation_task_sheet_id"
  - name: "pipeline3"
    xai_task_sheet_id: "xai_task_sheet_id"
    evaluation_task_sheet_id: "evaluation_task_sheet_id"